name: Spin up Vercel App

inputs:
  vercel-token:
    required: true
    description: 'Vercel token to deploy the app'
  PINECONE_API_KEY:
    required: true
    description: 'Pinecone API key to send requests to the Vercel app'

runs:
  using: 'composite'
  steps:
    - name: Check out current repository (pinecone-ts-client)
      uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '18.20.3'

    - name: Build pinecone-ts-client code
      run: npm install && npm run build
      shell: bash

    - name: Package pinecone-ts-client code
      run: npm pack && echo "Step 4, running npm pack"
      shell: bash

    - name: Clone Vercel app
      uses: GuillaumeFalourd/clone-github-repo-action@main
      with:
        owner: 'pinecone-io'
        repository: 'ts-client-e2e-tests'
        branch: 'Audrey/add-app'

    - name: Move package to ts-client-e2e-tests
      run: cd ts-client-e2e-tests && mv ../pinecone-database-pinecone-*.tgz .
      shell: bash

    - name: Install e2e tests dependencies
      run: cd ts-client-e2e-tests && npm install
      shell: bash

    - name: Install pinecone-ts-client "main" branch code into the Vercel app
      run: cd ts-client-e2e-tests && npm install pinecone-database-pinecone-*.tgz
      shell: bash

    - name: Install Vercel CLI
      run: cd ts-client-e2e-tests && npm install vercel
      shell: bash

    - name: Deploy app to Vercel
      run: |
        cd ts-client-e2e-tests
        vercel --scope=pinecone-io --token=${{ inputs.vercel-token }} --yes
      shell: bash

    - name: Send POST request to endpoint Vercel app endpoint api/createSeedQuery
      run: |
        API_URL="https://ts-client-e2e-tests.vercel.app/api/createSeedQuery"
        API_KEY=${{ inputs.PINECONE_API_KEY }}
        response=$(curl --silent --location --request POST "$API_URL" --header "PINECONE_API_KEY: $API_KEY")

        match_count=$(echo "$response" | jq '.queryResult.matches | length')
        if [ $? -ne 0 ]; then
          echo "Error: Request failed."
          exit 1
        fi

        if [ "$match_count" -lt 1 ]; then
          echo "Error: Expected at least one result in queryResult.matches, but found none."
           exit 1
        else
          echo "Success: Found $match_count result(s) in queryResult.matches."
        fi
      shell: bash
