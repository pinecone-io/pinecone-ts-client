name: Spin up Vercel App

inputs:
  vercel-token:
    required: true
  vercel-project-id:
    required: true
  vercel-org-id:
    required: true
  PINECONE_API_KEY:
    required: true
  OPENAI_API_KEY:
    required: true
  VERCEL_TEAM_SCOPE:
    required: true

runs:
  using: 'composite'
  steps:
    - name: Check out current repository (pinecone-ts-client)
      uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '18.20.3'

    - name: Build pinecone-ts-client code
      run: npm install && npm run build
      shell: bash

    - name: Package pinecone-ts-client code
      run: npm pack
      shell: bash

    - name: Clone Vercel app -- test
      uses: GuillaumeFalourd/clone-github-repo-action@main
      with:
        owner: 'pinecone-io'
        repository: 'pinecone-rag-demo'
        branch: 'main'

    - name: Move package to pinecone-rag-demo
      run: cd pinecone-rag-demo && mv ../pinecone-database-pinecone-*.tgz .
      shell: bash

    - name: Install Pinecone Vercel app dependencies
      run: cd pinecone-rag-demo && npm install
      shell: bash

    - name: Install pinecone-ts-client "main" branch code into the Vercel app
      run: cd pinecone-rag-demo && npm install pinecone-database-pinecone-*.tgz
      shell: bash

    - name: Install pnpm
      run: cd pinecone-rag-demo && npm install -g pnpm
      shell: bash

    - name: Install rag app dependencies with pnpm
      run: cd pinecone-rag-demo && pnpm install
      shell: bash

    - name: Remove linting temporarily
      run: cd pinecone-rag-demo && rm -rf .eslintrc.json
      shell: bash

    - name: Add Global Bin dir needed for pnmp
      uses: pnpm/action-setup@v4
      with:
        version: 9
#      run: cd pinecone-rag-demo && pnpm setup
#      shell: bash

#    - name: Build Pinecone Vercel app
#      run: cd pinecone-rag-demo && pnpm run build
#      shell: bash

    - name: Install Vercel CLI
      run: cd pinecone-rag-demo && pnpm add -g vercel@latest
      shell: bash

    - name: Ensure you are in the pinecone-io scope
      env:
        vercel-token: ${{ inputs.vercel-token }}
        vercel-project-id: ${{ inputs.vercel-project-id }}
        vercel-org-id: ${{ inputs.vercel-org-id }}
      run: cd pinecone-rag-demo && vercel switch pinecone-io
      shell: bash

    - name: Pull Vercel Environment Information
      run: cd pinecone-rag-demo && vercel pull --yes --environment=production --token=${{ inputs.vercel-token }}
      shell: bash

    - name: Build Project Artifacts
      env:
        vercel-token: ${{ inputs.vercel-token }}
        vercel-project-id: ${{ inputs.vercel-project-id }}
        vercel-org-id: ${{ inputs.vercel-org-id }}
      run: cd pinecone-rag-demo && vercel build --prod --token=${{ inputs.vercel-token }}
      shell: bash

    - name: Deploy Project Artifacts to Vercel
      env:
        vercel-token: ${{ inputs.vercel-token }}
        vercel-project-id: ${{ inputs.vercel-project-id }}
        vercel-org-id: ${{ inputs.vercel-org-id }}
        PINECONE_API_KEY: ${{ inputs.PINECONE_API_KEY }}
        PINECONE_REGION: us-west-2
        PINECONE_INDEX: end-to-end-edge-test
        PINECONE_CLOUD: aws
        OPENAI_API_KEY: ${{ inputs.OPENAI_API_KEY }}
      run: cd pinecone-rag-demo && vercel deploy --prebuilt --prod --token=${{ inputs.vercel-token }}
      shell: bash

#    - name: Create vercel.json file
#      run: |
#        cd pinecone-rag-demo
#        echo '{
#          "version": 2,
#          "public": false,
#          "github": {
#            "enabled": false
#          },
#          "functions": {
#            "src/app/**/*.{ts,tsx}": {
#              "runtime": "edge-runtime@3.0.1",
#              "includeFiles": "src/app/**/*"
#            }
#          }
#        }' > vercel.json
#      shell: bash

#    - name: Test Vercel Auth
#      run: cd pinecone-rag-demo && vercel build --yes --token=${{ inputs.vercel-token }}
#      shell: bash

#    - name: Deploy to Vercel
#      env:
#        vercel-token: ${{ inputs.vercel-token }}
#        vercel-project-id: ${{ inputs.vercel-project-id }}
#        vercel-org-id: ${{ inputs.vercel-org-id }}
#        PINECONE_API_KEY: ${{ inputs.PINECONE_API_KEY }}
#        PINECONE_REGION: us-west-2
#        PINECONE_INDEX: end-to-end-edge-test
#        PINECONE_CLOUD: aws
#        OPENAI_API_KEY: ${{ inputs.OPENAI_API_KEY }}
#      run: cd pinecone-rag-demo && vercel --yes --token=${{ inputs.vercel-token }}
#      shell: bash
