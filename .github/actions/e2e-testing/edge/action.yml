name: Spin up Vercel App

inputs:
  VERCEL_TOKEN:
    required: true
  VERCEL_PROJECT_ID:
    required: true
  VERCEL_ORG_ID:
    required: true
  PINECONE_API_KEY:
    required: true
  OPENAI_API_KEY:
    required: true
  VERCEL_TEAM_SCOPE:
    required: true

runs:
  using: "composite"
  steps:
    - name: Check out current repository (pinecone-ts-client)
      uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '18.20.3'

    - name: Setup Vercel
      uses: amondnet/setup-vercel@v25
      env:
        VERCEL_TOKEN: ${{ inputs.VERCEL_TOKEN }}
        VERCEL_PROJECT_ID: ${{ inputs.VERCEL_PROJECT_ID }}
        VERCEL_ORG_ID: ${{ inputs.VERCEL_ORG_ID }}

    - name: Build pinecone-ts-client code
      run: npm run build
      shell: bash

    - name: Package pinecone-ts-client code
      run: npm pack
      shell: bash

    - name: Clone Pinecone Vercel app into pinecone-ts-client
      run: |
        git clone git@github.com:pinecone-io/pinecone-rag-demo.git
        cd pinecone-rag-demo
        git pull origin main
      shell: bash

    - name: Move package to pinecone-rag-demo
      run: mv pinecone-database-pinecone-*.tgz .

    - name: Install Pinecone Vercel app dependencies
      run: npm install
      shell: bash

    - name: Install pinecone-ts-client "main" branch code into the Vercel app
      run: npm install pinecone-database-pinecone-*.tgz
      shell: bash

    - name: Set up environment variables
      env:
        PINECONE_API_KEY: ${{ inputs.PINECONE_API_KEY }}
        PINECONE_REGION: us-west-2
        PINECONE_INDEX: end-to-end-edge-test
        PINECONE_CLOUD: aws
        OPENAI_API_KEY: ${{ inputs.OPENAI_API_KEY }}

    - name: Install pnpm
      run: npm install -g pnpm
      shell: bash

    - name: Install dependencies with pnpm
      run: pnpm install
      shell: bash

    - name: Remove linting temporarily
      run: rm -rf .eslintrc.json
      shell: bash

    - name: Build Pinecone Vercel app
      run: pnpm run build
      shell: bash

    - name: Install Vercel CLI
      run: pnpm add -g vercel
      shell: bash

    - name: Deploy to Vercel
      env:
        VERCEL_TEAM_SCOPE: ${{ inputs.VERCEL_TEAM_SCOPE }}
        VERCEL_TOKEN: ${{ inputs.VERCEL_TOKEN }}
      run: vercel deploy --token=$VERCEL_TOKEN --scope=$VERCEL_TEAM_SCOPE
      shell: bash
