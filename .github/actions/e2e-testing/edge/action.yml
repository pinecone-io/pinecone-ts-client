name: Spin up Vercel App

inputs:
  vercel-token:
    required: true
    description: 'Vercel token to deploy the app'
  PINECONE_API_KEY:
    required: true
    description: 'Pinecone API key to send requests to the Vercel app'

runs:
  using: 'composite'
  steps:
    - name: Check out current repository (pinecone-ts-client)
      uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '18.20.3'

    - name: Build pinecone-ts-client code
      run: npm install && npm run build
      shell: bash

    - name: Package pinecone-ts-client code
      run: npm pack && echo "Step 4, running npm pack"
      shell: bash

    - name: Clone Vercel app
      uses: GuillaumeFalourd/clone-github-repo-action@main
      with:
        owner: 'pinecone-io'
        repository: 'ts-client-e2e-tests'
        branch: 'main'

    - name: Move package to ts-client-e2e-tests
      run: cd ts-client-e2e-tests && mv ../pinecone-database-pinecone-*.tgz .
      shell: bash

    - name: Install e2e tests dependencies
      run: cd ts-client-e2e-tests && npm install
      shell: bash

    - name: Install pinecone-ts-client "main" branch code into the Vercel app
      run: cd ts-client-e2e-tests && npm install pinecone-database-pinecone-*.tgz
      shell: bash

    - name: Install Vercel CLI
      run: cd ts-client-e2e-tests && npm install vercel
      shell: bash

    - name: Send POST request to endpoint Vercel app endpoint api/createSeedQuery
      run: |
        npm install -g typescript
        npm install -g ts-node

        API_KEY="${{ inputs.PINECONE_API_KEY }}"
             
        indexName=$(ts-node src/end-to-end/localRuns.ts $API_KEY)
             
        if [[ "$indexName" != *"edge-test"* ]]; then
          echo "Error encountered: $indexName"
          exit 1
        else
          echo "Test succeeded! Index created: $indexName"
        fi

        echo "indexName=$indexName" >> $GITHUB_ENV
      shell: bash

    - name: Clean up e2e indexes
      run: |
        PINECONE_API_KEY="${{ inputs.PINECONE_API_KEY }}"
        matching_index="${{ env.indexName }}"

        delete_response=$(curl -s -o /dev/null -w "%{http_code}" -X DELETE "https://api.pinecone.io/indexes/$matching_index" \
        -H "Api-Key: $PINECONE_API_KEY")

        if [ "$delete_response" -eq 202 ]; then
          echo "Successfully deleted index: $matching_index"
        else
          echo "Failed to delete index: $matching_index. HTTP status code: $delete_response"
          exit 1
        fi
      shell: bash
