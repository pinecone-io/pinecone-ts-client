name: Spin up Vercel App

on:
  pull_request: {}
  push: {}

jobs:
  spin-up-vercel-app:
    runs-on: ubuntu-latest
    steps:
      - name: Check out current repository (pinecone-ts-client)
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18.20.3'

      - name: Setup Vercel
        uses: amondnet/setup-vercel@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}

      - name: Build pinecone-ts-client code
        run: npm run build

      - name: Package pinecone-ts-client code
        run: npm pack

      - name: Clone Pinecone Vercel app into pinecone-ts-client
        run: git clone git@github.com:pinecone-io/pinecone-rag-demo.git && cd pinecone-rag-demo && git pull origin main

      - name: Move package to pinecone-rag-demo
        run: mv pinecone-database-pinecone-*.tgz .

      - name: Install Pinecone Vercel app dependencies
        run: npm install

      - name: Install pinecone-ts-client "main" branch code into the Vercel app
        run: npm install pinecone-database-pinecone-*.tgz

      - name: Set up environment variables
        env:
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
          PINECONE_REGION: us-west-2
          PINECONE_INDEX: end-to-end-edge-test
          PINECONE_CLOUD: aws
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies with pnpm
        run: pnpm install

      - name: Remove linting temporarily
        run: rm -rf .eslintrc.json

      - name: Build Pinecone Vercel app
        run: |
          pnpm run build

      - name: Install Vercel CLI
        run: pnpm add -g vercel

      - name: Deploy to Vercel
        env:
          VERCEL_TEAM_SCOPE: ${{ secrets.VERCEL_TEAM_SCOPE }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: vercel deploy --token=$VERCEL_TOKEN --scope=$VERCEL_TEAM_SCOPE
