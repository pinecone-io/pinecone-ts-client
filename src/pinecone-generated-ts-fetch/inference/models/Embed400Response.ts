/* tslint:disable */
/* eslint-disable */
/**
 * Pinecone Inference API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: 2024-10
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Embed400ResponseError } from './Embed400ResponseError';
import {
    Embed400ResponseErrorFromJSON,
    Embed400ResponseErrorFromJSONTyped,
    Embed400ResponseErrorToJSON,
} from './Embed400ResponseError';

/**
 * The response shape used for all error responses.
 * @export
 * @interface Embed400Response
 */
export interface Embed400Response {
    /**
     * The HTTP status code of the error.
     * @type {number}
     * @memberof Embed400Response
     */
    status: number;
    /**
     * 
     * @type {Embed400ResponseError}
     * @memberof Embed400Response
     */
    error: Embed400ResponseError;
}

/**
 * Check if a given object implements the Embed400Response interface.
 */
export function instanceOfEmbed400Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "error" in value;

    return isInstance;
}

export function Embed400ResponseFromJSON(json: any): Embed400Response {
    return Embed400ResponseFromJSONTyped(json, false);
}

export function Embed400ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Embed400Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': json['status'],
        'error': Embed400ResponseErrorFromJSON(json['error']),
    };
}

export function Embed400ResponseToJSON(value?: Embed400Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': value.status,
        'error': Embed400ResponseErrorToJSON(value.error),
    };
}

