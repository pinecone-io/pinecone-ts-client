/* tslint:disable */
/* eslint-disable */
/**
 * Pinecone Inference API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: unstable
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    DenseEmbedding,
    instanceOfDenseEmbedding,
    DenseEmbeddingFromJSON,
    DenseEmbeddingFromJSONTyped,
    DenseEmbeddingToJSON,
} from './DenseEmbedding';
import {
    SparseEmbedding,
    instanceOfSparseEmbedding,
    SparseEmbeddingFromJSON,
    SparseEmbeddingFromJSONTyped,
    SparseEmbeddingToJSON,
} from './SparseEmbedding';

/**
 * @type Embedding
 * Embedding of a single input
 * @export
 */
export type Embedding = { vectorType: 'dense' } & DenseEmbedding | { vectorType: 'sparse' } & SparseEmbedding;

export function EmbeddingFromJSON(json: any): Embedding {
    return EmbeddingFromJSONTyped(json, false);
}

export function EmbeddingFromJSONTyped(json: any, ignoreDiscriminator: boolean): Embedding {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['vector_type']) {
        case 'dense':
            return {...DenseEmbeddingFromJSONTyped(json, true), vectorType: 'dense'};
        case 'sparse':
            return {...SparseEmbeddingFromJSONTyped(json, true), vectorType: 'sparse'};
        default:
            throw new Error(`No variant of Embedding exists with 'vectorType=${json['vectorType']}'`);
    }
}

export function EmbeddingToJSON(value?: Embedding | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['vectorType']) {
        case 'dense':
            return DenseEmbeddingToJSON(value);
        case 'sparse':
            return SparseEmbeddingToJSON(value);
        default:
            throw new Error(`No variant of Embedding exists with 'vectorType=${value['vectorType']}'`);
    }

}

