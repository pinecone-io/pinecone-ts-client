/* tslint:disable */
/* eslint-disable */
/**
 * Pinecone API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { IndexMetaDatabaseIndexConfig } from './IndexMetaDatabaseIndexConfig';
import {
    IndexMetaDatabaseIndexConfigFromJSON,
    IndexMetaDatabaseIndexConfigFromJSONTyped,
    IndexMetaDatabaseIndexConfigToJSON,
} from './IndexMetaDatabaseIndexConfig';

/**
 * 
 * @export
 * @interface IndexMetaDatabase
 */
export interface IndexMetaDatabase {
    /**
     * 
     * @type {string}
     * @memberof IndexMetaDatabase
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof IndexMetaDatabase
     */
    dimension: number;
    /**
     * 
     * @type {string}
     * @memberof IndexMetaDatabase
     */
    capacityMode: string;
    /**
     * 
     * @type {string}
     * @memberof IndexMetaDatabase
     * @deprecated
     */
    indexType?: string;
    /**
     * 
     * @type {string}
     * @memberof IndexMetaDatabase
     */
    metric: string;
    /**
     * 
     * @type {number}
     * @memberof IndexMetaDatabase
     */
    pods?: number;
    /**
     * 
     * @type {number}
     * @memberof IndexMetaDatabase
     */
    replicas?: number;
    /**
     * 
     * @type {number}
     * @memberof IndexMetaDatabase
     */
    shards?: number;
    /**
     * 
     * @type {string}
     * @memberof IndexMetaDatabase
     */
    podType?: string;
    /**
     * 
     * @type {IndexMetaDatabaseIndexConfig}
     * @memberof IndexMetaDatabase
     */
    indexConfig?: IndexMetaDatabaseIndexConfig;
    /**
     * 
     * @type {object}
     * @memberof IndexMetaDatabase
     */
    metadataConfig?: object;
}

/**
 * Check if a given object implements the IndexMetaDatabase interface.
 */
export function instanceOfIndexMetaDatabase(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "dimension" in value;
    isInstance = isInstance && "capacityMode" in value;
    isInstance = isInstance && "metric" in value;

    return isInstance;
}

export function IndexMetaDatabaseFromJSON(json: any): IndexMetaDatabase {
    return IndexMetaDatabaseFromJSONTyped(json, false);
}

export function IndexMetaDatabaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): IndexMetaDatabase {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'dimension': json['dimension'],
        'capacityMode': json['capacity_mode'],
        'indexType': !exists(json, 'index_type') ? undefined : json['index_type'],
        'metric': json['metric'],
        'pods': !exists(json, 'pods') ? undefined : json['pods'],
        'replicas': !exists(json, 'replicas') ? undefined : json['replicas'],
        'shards': !exists(json, 'shards') ? undefined : json['shards'],
        'podType': !exists(json, 'pod_type') ? undefined : json['pod_type'],
        'indexConfig': !exists(json, 'index_config') ? undefined : IndexMetaDatabaseIndexConfigFromJSON(json['index_config']),
        'metadataConfig': !exists(json, 'metadata_config') ? undefined : json['metadata_config'],
    };
}

export function IndexMetaDatabaseToJSON(value?: IndexMetaDatabase | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'dimension': value.dimension,
        'capacity_mode': value.capacityMode,
        'index_type': value.indexType,
        'metric': value.metric,
        'pods': value.pods,
        'replicas': value.replicas,
        'shards': value.shards,
        'pod_type': value.podType,
        'index_config': IndexMetaDatabaseIndexConfigToJSON(value.indexConfig),
        'metadata_config': value.metadataConfig,
    };
}

