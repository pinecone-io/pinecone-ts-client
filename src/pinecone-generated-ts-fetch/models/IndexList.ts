/* tslint:disable */
/* eslint-disable */
/**
 * Pineonce.io Public API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { IndexModel } from './IndexModel';
import {
    IndexModelFromJSON,
    IndexModelFromJSONTyped,
    IndexModelToJSON,
} from './IndexModel';

/**
 * The list of indexes that exist in the project.
 * @export
 * @interface IndexList
 */
export interface IndexList {
    /**
     * 
     * @type {Array<IndexModel>}
     * @memberof IndexList
     */
    indexes?: Array<IndexModel>;
}

/**
 * Check if a given object implements the IndexList interface.
 */
export function instanceOfIndexList(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function IndexListFromJSON(json: any): IndexList {
    return IndexListFromJSONTyped(json, false);
}

export function IndexListFromJSONTyped(json: any, ignoreDiscriminator: boolean): IndexList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'indexes': !exists(json, 'indexes') ? undefined : ((json['indexes'] as Array<any>).map(IndexModelFromJSON)),
    };
}

export function IndexListToJSON(value?: IndexList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'indexes': value.indexes === undefined ? undefined : ((value.indexes as Array<any>).map(IndexModelToJSON)),
    };
}

