/* tslint:disable */
/* eslint-disable */
/**
 * Evaluation API
 * Provides endpoints for evaluating RAG systems using various metrics.
 *
 * The version of the OpenAPI document: unstable
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EvaluatedFact } from './EvaluatedFact';
import {
    EvaluatedFactFromJSON,
    EvaluatedFactFromJSONTyped,
    EvaluatedFactToJSON,
} from './EvaluatedFact';

/**
 * The reasoning behind the alignment evaluation.
 * @export
 * @interface Reasoning
 */
export interface Reasoning {
    /**
     * The facts that were evaluated.
     * @type {Array<EvaluatedFact>}
     * @memberof Reasoning
     */
    evaluatedFacts: Array<EvaluatedFact>;
}

/**
 * Check if a given object implements the Reasoning interface.
 */
export function instanceOfReasoning(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "evaluatedFacts" in value;

    return isInstance;
}

export function ReasoningFromJSON(json: any): Reasoning {
    return ReasoningFromJSONTyped(json, false);
}

export function ReasoningFromJSONTyped(json: any, ignoreDiscriminator: boolean): Reasoning {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'evaluatedFacts': ((json['evaluated_facts'] as Array<any>).map(EvaluatedFactFromJSON)),
    };
}

export function ReasoningToJSON(value?: Reasoning | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'evaluated_facts': ((value.evaluatedFacts as Array<any>).map(EvaluatedFactToJSON)),
    };
}

