/* tslint:disable */
/* eslint-disable */
/**
 * Pinecone Data Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: 2024-10
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Indicates how to respond to errors during the import process.
 * @export
 * @interface ImportErrorMode
 */
export interface ImportErrorMode {
    /**
     * Indicates how to respond to errors during the import process.
     * @type {string}
     * @memberof ImportErrorMode
     */
    onError?: ImportErrorModeOnErrorEnum;
}


/**
 * @export
 */
export const ImportErrorModeOnErrorEnum = {
    Abort: 'abort',
    Continue: 'continue'
} as const;
export type ImportErrorModeOnErrorEnum = typeof ImportErrorModeOnErrorEnum[keyof typeof ImportErrorModeOnErrorEnum];


/**
 * Check if a given object implements the ImportErrorMode interface.
 */
export function instanceOfImportErrorMode(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ImportErrorModeFromJSON(json: any): ImportErrorMode {
    return ImportErrorModeFromJSONTyped(json, false);
}

export function ImportErrorModeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportErrorMode {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'onError': !exists(json, 'onError') ? undefined : json['onError'],
    };
}

export function ImportErrorModeToJSON(value?: ImportErrorMode | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'onError': value.onError,
    };
}

