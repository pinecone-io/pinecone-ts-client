/* tslint:disable */
/* eslint-disable */
/**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: unstable
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The OpeartionModel descriptions the status of an ongoing server operation
 * @export
 * @interface OperationModel
 */
export interface OperationModel {
    /**
     * 
     * @type {string}
     * @memberof OperationModel
     */
    operationId: string;
    /**
     * The status of the operation
     * @type {string}
     * @memberof OperationModel
     */
    status: OperationModelStatusEnum;
    /**
     * The progress made by the operation out of 100
     * @type {number}
     * @memberof OperationModel
     */
    percentComplete: number;
}


/**
 * @export
 */
export const OperationModelStatusEnum = {
    Pending: 'Pending',
    Failed: 'Failed',
    Completed: 'Completed',
    Cancelled: 'Cancelled'
} as const;
export type OperationModelStatusEnum = typeof OperationModelStatusEnum[keyof typeof OperationModelStatusEnum];


/**
 * Check if a given object implements the OperationModel interface.
 */
export function instanceOfOperationModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "operationId" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "percentComplete" in value;

    return isInstance;
}

export function OperationModelFromJSON(json: any): OperationModel {
    return OperationModelFromJSONTyped(json, false);
}

export function OperationModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): OperationModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'operationId': json['operation_id'],
        'status': json['status'],
        'percentComplete': json['percent_complete'],
    };
}

export function OperationModelToJSON(value?: OperationModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'operation_id': value.operationId,
        'status': value.status,
        'percent_complete': value.percentComplete,
    };
}

