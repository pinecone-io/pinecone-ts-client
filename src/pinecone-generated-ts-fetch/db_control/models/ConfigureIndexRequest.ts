/* tslint:disable */
/* eslint-disable */
/**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: 2024-10
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ConfigureIndexRequestSpec } from './ConfigureIndexRequestSpec';
import {
    ConfigureIndexRequestSpecFromJSON,
    ConfigureIndexRequestSpecFromJSONTyped,
    ConfigureIndexRequestSpecToJSON,
} from './ConfigureIndexRequestSpec';
import type { DeletionProtection } from './DeletionProtection';
import {
    DeletionProtectionFromJSON,
    DeletionProtectionFromJSONTyped,
    DeletionProtectionToJSON,
} from './DeletionProtection';

/**
 * Configuration used to scale an index.
 * @export
 * @interface ConfigureIndexRequest
 */
export interface ConfigureIndexRequest {
    /**
     * 
     * @type {ConfigureIndexRequestSpec}
     * @memberof ConfigureIndexRequest
     */
    spec?: ConfigureIndexRequestSpec;
    /**
     * 
     * @type {DeletionProtection}
     * @memberof ConfigureIndexRequest
     */
    deletionProtection?: DeletionProtection;
    /**
     * Custom user tags added to an index. Keys must be 80 characters or less. Values must be 120 characters or less. Keys must be alphanumeric, '_', or '-'. Values must be alphanumeric, ';', '@', '_', '-', '.', '+', or ' '.  To unset a key, set the value to be an empty string.
     * @type {{ [key: string]: string; }}
     * @memberof ConfigureIndexRequest
     */
    tags?: { [key: string]: string; };
}

/**
 * Check if a given object implements the ConfigureIndexRequest interface.
 */
export function instanceOfConfigureIndexRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConfigureIndexRequestFromJSON(json: any): ConfigureIndexRequest {
    return ConfigureIndexRequestFromJSONTyped(json, false);
}

export function ConfigureIndexRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigureIndexRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'spec': !exists(json, 'spec') ? undefined : ConfigureIndexRequestSpecFromJSON(json['spec']),
        'deletionProtection': !exists(json, 'deletion_protection') ? undefined : DeletionProtectionFromJSON(json['deletion_protection']),
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
    };
}

export function ConfigureIndexRequestToJSON(value?: ConfigureIndexRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'spec': ConfigureIndexRequestSpecToJSON(value.spec),
        'deletion_protection': DeletionProtectionToJSON(value.deletionProtection),
        'tags': value.tags,
    };
}

