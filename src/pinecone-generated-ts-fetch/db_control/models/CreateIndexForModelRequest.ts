/* tslint:disable */
/* eslint-disable */
/**
 * Pinecone Control Plane API
 * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.
 *
 * The version of the OpenAPI document: unstable
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CreateIndexForModelRequestEmbed } from './CreateIndexForModelRequestEmbed';
import {
    CreateIndexForModelRequestEmbedFromJSON,
    CreateIndexForModelRequestEmbedFromJSONTyped,
    CreateIndexForModelRequestEmbedToJSON,
} from './CreateIndexForModelRequestEmbed';
import type { DeletionProtection } from './DeletionProtection';
import {
    DeletionProtectionFromJSON,
    DeletionProtectionFromJSONTyped,
    DeletionProtectionToJSON,
} from './DeletionProtection';

/**
 * The desired configuration for the index and associated embedding model.
 * @export
 * @interface CreateIndexForModelRequest
 */
export interface CreateIndexForModelRequest {
    /**
     * The name of the index. Resource name must be 1-45 characters long, start and end with an alphanumeric character, and consist only of lower case alphanumeric characters or '-'.
     * @type {string}
     * @memberof CreateIndexForModelRequest
     */
    name: string;
    /**
     * The public cloud where you would like your index hosted.
     * @type {string}
     * @memberof CreateIndexForModelRequest
     */
    cloud: CreateIndexForModelRequestCloudEnum;
    /**
     * The region where you would like your index to be created.
     * @type {string}
     * @memberof CreateIndexForModelRequest
     */
    region: string;
    /**
     * 
     * @type {DeletionProtection}
     * @memberof CreateIndexForModelRequest
     */
    deletionProtection?: DeletionProtection;
    /**
     * Custom user tags added to an index. Keys must be 80 characters or less. Values must be 120 characters or less. Keys must be alphanumeric, '_', or '-'.  Values must be alphanumeric, ';', '@', '_', '-', '.', '+', or ' '. To unset a key, set the value to be an empty string.
     * @type {{ [key: string]: string; }}
     * @memberof CreateIndexForModelRequest
     */
    tags?: { [key: string]: string; };
    /**
     * 
     * @type {CreateIndexForModelRequestEmbed}
     * @memberof CreateIndexForModelRequest
     */
    embed: CreateIndexForModelRequestEmbed;
}


/**
 * @export
 */
export const CreateIndexForModelRequestCloudEnum = {
    Gcp: 'gcp',
    Aws: 'aws',
    Azure: 'azure'
} as const;
export type CreateIndexForModelRequestCloudEnum = typeof CreateIndexForModelRequestCloudEnum[keyof typeof CreateIndexForModelRequestCloudEnum];


/**
 * Check if a given object implements the CreateIndexForModelRequest interface.
 */
export function instanceOfCreateIndexForModelRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "cloud" in value;
    isInstance = isInstance && "region" in value;
    isInstance = isInstance && "embed" in value;

    return isInstance;
}

export function CreateIndexForModelRequestFromJSON(json: any): CreateIndexForModelRequest {
    return CreateIndexForModelRequestFromJSONTyped(json, false);
}

export function CreateIndexForModelRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateIndexForModelRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'cloud': json['cloud'],
        'region': json['region'],
        'deletionProtection': !exists(json, 'deletion_protection') ? undefined : DeletionProtectionFromJSON(json['deletion_protection']),
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'embed': CreateIndexForModelRequestEmbedFromJSON(json['embed']),
    };
}

export function CreateIndexForModelRequestToJSON(value?: CreateIndexForModelRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'cloud': value.cloud,
        'region': value.region,
        'deletion_protection': DeletionProtectionToJSON(value.deletionProtection),
        'tags': value.tags,
        'embed': CreateIndexForModelRequestEmbedToJSON(value.embed),
    };
}

