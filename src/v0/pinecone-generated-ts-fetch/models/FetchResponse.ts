/* tslint:disable */
/* eslint-disable */
/**
 * Pinecone API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Vector } from './Vector';
import {
    VectorFromJSON,
    VectorFromJSONTyped,
    VectorToJSON,
} from './Vector';

/**
 * The response for the `Fetch` operation.
 * @export
 * @interface FetchResponse
 */
export interface FetchResponse {
    /**
     * 
     * @type {{ [key: string]: Vector; }}
     * @memberof FetchResponse
     */
    vectors?: { [key: string]: Vector; };
    /**
     * The namespace of the vectors.
     * @type {string}
     * @memberof FetchResponse
     */
    namespace?: string;
}

/**
 * Check if a given object implements the FetchResponse interface.
 */
export function instanceOfFetchResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FetchResponseFromJSON(json: any): FetchResponse {
    return FetchResponseFromJSONTyped(json, false);
}

export function FetchResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): FetchResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'vectors': !exists(json, 'vectors') ? undefined : (mapValues(json['vectors'], VectorFromJSON)),
        'namespace': !exists(json, 'namespace') ? undefined : json['namespace'],
    };
}

export function FetchResponseToJSON(value?: FetchResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'vectors': value.vectors === undefined ? undefined : (mapValues(value.vectors, VectorToJSON)),
        'namespace': value.namespace,
    };
}

