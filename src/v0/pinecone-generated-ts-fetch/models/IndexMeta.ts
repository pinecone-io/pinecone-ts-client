/* tslint:disable */
/* eslint-disable */
/**
 * Pinecone API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * Contact: support@pinecone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { IndexMetaDatabase } from './IndexMetaDatabase';
import {
    IndexMetaDatabaseFromJSON,
    IndexMetaDatabaseFromJSONTyped,
    IndexMetaDatabaseToJSON,
} from './IndexMetaDatabase';
import type { IndexMetaStatus } from './IndexMetaStatus';
import {
    IndexMetaStatusFromJSON,
    IndexMetaStatusFromJSONTyped,
    IndexMetaStatusToJSON,
} from './IndexMetaStatus';

/**
 * 
 * @export
 * @interface IndexMeta
 */
export interface IndexMeta {
    /**
     * 
     * @type {IndexMetaDatabase}
     * @memberof IndexMeta
     */
    database?: IndexMetaDatabase;
    /**
     * 
     * @type {IndexMetaStatus}
     * @memberof IndexMeta
     */
    status?: IndexMetaStatus;
}

/**
 * Check if a given object implements the IndexMeta interface.
 */
export function instanceOfIndexMeta(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function IndexMetaFromJSON(json: any): IndexMeta {
    return IndexMetaFromJSONTyped(json, false);
}

export function IndexMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): IndexMeta {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'database': !exists(json, 'database') ? undefined : IndexMetaDatabaseFromJSON(json['database']),
        'status': !exists(json, 'status') ? undefined : IndexMetaStatusFromJSON(json['status']),
    };
}

export function IndexMetaToJSON(value?: IndexMeta | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'database': IndexMetaDatabaseToJSON(value.database),
        'status': IndexMetaStatusToJSON(value.status),
    };
}

